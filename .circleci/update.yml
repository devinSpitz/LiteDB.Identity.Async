# Use the latest 2.1 version of CircleCI pipeline process engine.
# See httpscircleci.comdocs2.0configuration-reference
version 2.1
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
# Define a job to be invoked later in a workflow.
# See httpscircleci.comdocs2.0configuration-reference#jobs
jobs
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  test
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See httpscircleci.comdocs2.0configuration-reference#docker-machine-macos-windows-executor
    # Be sure to update the tag on this image to a more stable version, using latest can result in unstable builds.
    docker
      - image mcr.microsoft.comdotnetsdk5.0
    # Add steps to the job
    # See httpscircleci.comdocs2.0configuration-reference#steps
    steps
      # Checkout the code as the first step.
      - checkout
      # Then simply use the dotnet container as you'd expect and run your tests
      - run
          # Update this line with the directory that contains your tests project file
          working_directory  .
          name Run tests
          command 
              cd LiteDB.Identity.Async.Tests
              dotnet test LiteDB.Identity.Async.Tests.csproj
      - persist_to_workspace
          root .
          paths
            - .

# Invoke jobs via workflows
#
# See httpscircleci.comdocs2.0configuration-reference#workflows
workflows
  TestBuildRelease # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs
      - test
